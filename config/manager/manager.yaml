apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: metrics-server-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/component: manager
    app.kubernetes.io/part-of: metrics-server-operator
    # Pod Security Standards
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: metrics-server-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/component: manager
    app.kubernetes.io/part-of: metrics-server-operator
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: metrics-server-operator
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: metrics-server-operator
        app.kubernetes.io/component: manager
        app.kubernetes.io/part-of: metrics-server-operator
    spec:
      # Multi-architecture support
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    control-plane: controller-manager
                topologyKey: kubernetes.io/hostname
      # Enhanced security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups: []
      # Priority and scheduling
      priorityClassName: system-cluster-critical
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 30
      # Improved restart policy
      restartPolicy: Always
      containers:
      - command:
        - /manager
        args:
          - --leader-elect
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=:8080
          - --zap-log-level=info
          - --zap-encoder=console
        image: controller:latest
        name: manager
        imagePullPolicy: IfNotPresent
        ports:
          - name: metrics
            containerPort: 8080
            protocol: TCP
          - name: health
            containerPort: 8081
            protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        # Enhanced probes
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /readyz
            port: health
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        # Resource management - production-ready, conservative limits
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
            ephemeral-storage: 256Mi
          requests:
            cpu: 10m
            memory: 32Mi
            ephemeral-storage: 128Mi
        # Environment variables for better observability
        env:
          - name: GOGC
            value: "100"
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                resource: limits.memory
        volumeMounts:
          - name: tmp
            mountPath: /tmp
            readOnly: false
      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: 32Mi
---
# Network Policy for additional security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: controller-manager-network-policy
  namespace: system
  labels:
    app.kubernetes.io/name: metrics-server-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/component: manager
spec:
  podSelector:
    matchLabels:
      control-plane: controller-manager
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow metrics scraping from Prometheus
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
        - namespaceSelector:
            matchLabels:
              name: prometheus
      ports:
        - protocol: TCP
          port: 8080
    # Allow health checks from kubelet
    - from: []
      ports:
        - protocol: TCP
          port: 8081
  egress:
    # Allow communication with Kubernetes API server
    - to: []
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 6443
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53